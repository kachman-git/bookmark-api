// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                      String        @id @default(uuid())
  email                   String?       @unique
  password                String?
  provider                String        @default("email")
  providerId              String?
  isVerified              Boolean       @default(false)
  emailVerificationToken  String?
  emailVerificationExp    DateTime?
  deleteAccountToken      String?
  deleteAccountTokenExp   DateTime?
  refreshTokens           RefreshToken[]
  profile                 Profile?
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
}

model Profile {
  id          String   @id @default(uuid())
  firstName   String?
  lastName    String?
  bio         String?
  imgOriginal String?
  imgThumb    String?
  imgMedium   String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RefreshToken {
  id          String   @id @default(uuid())
  token       String   @unique
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  ip          String?
  userAgent   String?
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  revoked     Boolean  @default(false)

  @@index([userId])
}
